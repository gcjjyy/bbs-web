{"version":3,"sources":["reportWebVitals.js","index.js","LoadingModal.js","App.js","themes.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","LoadingModal","show","message","size","backdrop","centered","Header","Body","className","animation","debug","require","CANVAS_WIDTH","FONT_HEIGHT","WINDOW_TOP","WINDOW_BOTTOM","SCREEN_HEIGHT","COLOR","FONTS","name","value","DISPLAYS","_io","_ctx2d","_rate","_selectedDisplay","_selectedFont","_escape","_cursor","x","y","_cursorStore","_attr","textColor","backgroundColor","reversed","_lastPageText","_lastPageTextPos","_smartMouse","_smartMouseCmd","useState","connDiag","setConnDiag","command","setCommand","commandType","setCommandType","applyDiag","setApplyDiag","terminalRef","useRef","smartMouseBoxRef","commandRef","onResize","rebuildSmartMouse","moveCommandInputPosition","terminalClicked","current","focus","doubleWidth","ch","charCodeAt","measureText","width","lf","copy","getImageData","putImageData","fillStyle","fillRect","pos","screenScrollUp","enterCommand","emit","displayChanged","isInitial","i","THEMES","style","fontFamily","font","cookies","set","expires","setTimeout","getElementsByTagName","write","onBeforeUnload","disconnect","applyEscape","result","exec","param1","parseInt","isNaN","param2","height","endsWith","clientWidth","scrollFrom","scrollTo","endOfEscape","lastChar","charAt","length","indexOf","visibility","pattern","replace","trim","normalText","link","px","index","push","bcr","getBoundingClientRect","scaledCursorX","scaledCursorY","tmLeft","left","window","pageXOffset","cmLeft","cmTop","top","pageYOffset","cmWidth","fontSize","text","charWidth","cursor_px","save","scale","fillText","restore","useEffect","get","includes","getContext","textBaseline","alert","setupTerminal","io","on","data","Buffer","from","toString","addEventListener","removeEventListener","bg","variant","src","Brand","color","onSelect","selectedKey","title","map","Item","eventKey","display","onClick","esc","copyToClipboard","class","ref","maxWidth","onMouseMove","event","clientX","clientY","mouseX","mouseY","sm","mouseMove","open","type","onChange","target","onKeyUp","key","href","VGA","ACI","HERCULES"],"mappings":"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","file":"static/js/main.897221aa.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nimport './Flatly-bootstrap.min.css'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","import { Modal, Spinner } from 'react-bootstrap'\n\nfunction LoadingModal({ show, message }) {\n  return (\n    <Modal show={show} size='xs' backdrop='static' centered>\n      <Modal.Header>\n        {message}\n      </Modal.Header>\n      <Modal.Body className='text-center m-4'>\n        <Spinner animation='border' />\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default LoadingModal\n","import cookies from 'browser-cookies'\nimport copy from 'copy-to-clipboard'\nimport { useEffect, useRef, useState } from 'react'\nimport { Button, Nav, Navbar, NavDropdown } from 'react-bootstrap'\nimport io from 'socket.io-client'\nimport './App.css'\nimport LoadingModal from './LoadingModal'\nimport THEMES from './themes'\n\nconst debug = require('debug')('bbs-web')\n\nconst CANVAS_WIDTH = 640\nconst CANVAS_HEIGHT = 528\n\nconst FONT_WIDTH = 8\nconst FONT_HEIGHT = 16\nconst SCREEN_HEIGHT = 33\n\nconst SMART_MOUSE_BORDER = 2\n\nlet WINDOW_TOP = 0\nlet WINDOW_BOTTOM = SCREEN_HEIGHT - 1\n\nconst COLOR = []\nconst FONTS = [\n  { name: '둥근모', value: 'neodgm' },\n  { name: '굵은체', value: 'neoiyg' },\n  { name: '필기체', value: 'neopil' },\n  { name: '굵은달', value: 'neoancient' },\n  { name: '샘물체', value: 'neowater' }\n]\nconst DISPLAYS = ['VGA', 'ACI', 'HERCULES']\n\nlet _io = null\nlet _ctx2d = null\nlet _rate = 1.0\nlet _selectedDisplay = 'VGA'\nlet _selectedFont = 'neodgm'\nlet _escape = null\nlet _cursor = { x: 0, y: 0 }\nlet _cursorStore = { x: 0, y: 0 }\nlet _attr = { textColor: 15, backgroundColor: 1, reversed: false }\nlet _lastPageText = ''\nlet _lastPageTextPos = []\nlet _smartMouse = []\nlet _smartMouseCmd = null\n\nfunction App() {\n  const [connDiag, setConnDiag] = useState(true)\n  const [command, setCommand] = useState('')\n  const [commandType, setCommandType] = useState('text')\n\n  const [applyDiag, setApplyDiag] = useState(false)\n\n  /*\n  const [rzDiag, setRzDiag] = useState(false)\n  const [rzFilename, setRzFilename] = useState(null)\n  const [rzReceived, setRzReceived] = useState(0)\n  const [rzTotal, setRzTotal] = useState(0)\n  const [rzUrl, setRzUrl] = useState(null)\n  */\n\n  const terminalRef = useRef()\n  const smartMouseBoxRef = useRef()\n  const commandRef = useRef()\n\n  const fontSelected = (font) => {\n    _selectedFont = font\n    displayChanged(false)\n  }\n\n  const displaySelected = (display) => {\n    _selectedDisplay = display\n    displayChanged(false)\n  }\n\n  const onResize = () => {\n    rebuildSmartMouse()\n    moveCommandInputPosition()\n  }\n\n  const copyToClipboard = () => {\n    let normalText = ''\n    let esc = false\n\n    for (const ch of _lastPageText) {\n      if (!esc && ch === '\\x1b') {\n        esc = true\n        continue\n      }\n\n      if (esc && '@ABCDFGHJKSfhlmprsu'.indexOf(ch) !== -1) {\n        esc = false\n        continue\n      }\n\n      if (!esc) {\n        normalText += ch\n      }\n    }\n\n    normalText = normalText.replace(/\\x0d\\x00/gi, '')\n\n    if (copy(normalText)) {\n      alert('현재 화면이 클립보드에 복사되었습니다.')\n    } else {\n      alert('클립보드에 복사 중 오류가 발생하였습니다.')\n    }\n  }\n\n  const terminalClicked = () => {\n    commandRef.current.focus()\n  }\n\n  const mouseMove = (clientX, clientY) => {\n    const mouseX = clientX - terminalRef.current.getBoundingClientRect().left\n    const mouseY = clientY - terminalRef.current.getBoundingClientRect().top\n\n    for (const sm of _smartMouse) {\n      if (\n        mouseX >= sm.px.x &&\n        mouseY >= sm.px.y &&\n        mouseX < sm.px.x + sm.px.width &&\n        mouseY < sm.px.y + sm.px.height\n      ) {\n        // Intenally set the smart mouse command\n        _smartMouseCmd = sm.command\n\n        // Mouse smart mouse box to the position\n        smartMouseBoxRef.current.style.left =\n          sm.px.x -\n          SMART_MOUSE_BORDER +\n          terminalRef.current.getBoundingClientRect().left +\n          window.pageXOffset +\n          'px'\n        smartMouseBoxRef.current.style.top =\n          sm.px.y -\n          SMART_MOUSE_BORDER +\n          terminalRef.current.getBoundingClientRect().top +\n          window.pageYOffset +\n          'px'\n        smartMouseBoxRef.current.style.width =\n          sm.px.width + 2 * SMART_MOUSE_BORDER + 'px'\n        smartMouseBoxRef.current.style.height =\n          sm.px.height + 2 * SMART_MOUSE_BORDER + 'px'\n        smartMouseBoxRef.current.style.visibility = 'visible'\n\n        return\n      }\n    }\n\n    // If no smart mouse position has detected, hide the smart mouse box\n    smartMouseBoxRef.current.style.visibility = 'hidden'\n  }\n\n  const smartMouseClicked = () => {\n    if (/https?:\\/\\//.exec(_smartMouseCmd)) {\n      window.open(_smartMouseCmd, '_blank')\n    } else {\n      enterCommand(_smartMouseCmd)\n    }\n\n    smartMouseBoxRef.current.style.visibility = 'hidden'\n    _smartMouseCmd = ''\n\n    terminalClicked()\n  }\n\n  const onKeyUp = (key) => {\n    if (key === 'Enter') {\n      enterCommand(command)\n    }\n  }\n\n  const doubleWidth = (ch) => {\n    return (ch.charCodeAt(0) >= 0x80) && (_ctx2d.measureText(ch).width <= 9)\n  }\n\n  const screenScrollUp = () => {\n    const copy = _ctx2d.getImageData(\n      0,\n      FONT_HEIGHT * (WINDOW_TOP + 1),\n      CANVAS_WIDTH,\n      FONT_HEIGHT * (WINDOW_BOTTOM - WINDOW_TOP)\n    )\n    _ctx2d.putImageData(copy, 0, FONT_HEIGHT * WINDOW_TOP)\n    _ctx2d.fillStyle = COLOR[_attr.backgroundColor]\n    _ctx2d.fillRect(\n      0,\n      WINDOW_BOTTOM * FONT_HEIGHT,\n      CANVAS_WIDTH,\n      FONT_HEIGHT\n    )\n\n    // Modify the position of _lastPageTextPos (scroll up)\n    for (const pos of _lastPageTextPos) {\n      if (pos.y >= WINDOW_TOP && pos.y <= WINDOW_BOTTOM) {\n        pos.y--\n      }\n    }\n  }\n\n  const cr = () => {\n    _cursor.x = 0\n  }\n\n  const lf = () => {\n    _cursor.y++\n    if (_cursor.y > WINDOW_BOTTOM) {\n      _cursor.y = WINDOW_BOTTOM\n      screenScrollUp()\n    }\n  }\n\n  const enterCommand = (command) => {\n    if (command) {\n      _io.emit('data', `${command}\\r\\n`)\n    } else {\n      _io.emit('data', '\\r\\n')\n    }\n    setCommand('')\n  }\n\n  const displayChanged = (isInitial = false) => {\n    for (let i = 0; i < 16; i++) {\n      COLOR[i] = THEMES[_selectedDisplay][i]\n    }\n\n    terminalRef.current.style.fontFamily = _selectedFont\n    commandRef.current.style.fontFamily = _selectedFont\n\n    _ctx2d.font = `normal 16px ${_selectedFont}`\n\n    terminalClicked()\n\n    cookies.set('display', _selectedDisplay, { expires: 365 })\n    cookies.set('font', _selectedFont, { expires: 365 })\n\n    if (!isInitial) {\n      setApplyDiag(true)\n\n      setTimeout(() => {\n        // Clear whole webpage\n      document.getElementsByTagName('body')[0].style.backgroundColor =\n          COLOR[_attr.backgroundColor]\n\n        terminalRef.current.style.backgroundColor =\n          COLOR[_attr.backgroundColor]\n\n        // Rewrite last page text\n        write(_lastPageText)\n        setApplyDiag(false)\n\n        terminalClicked()\n      }, 4000)\n    }\n  }\n\n  const setupTerminal = () => {\n    _selectedDisplay = cookies.get('display') ?? 'VGA'\n    _selectedFont = cookies.get('font') ?? 'neodgm'\n\n    // Value check for the prevent error by the previous value\n    if (!DISPLAYS.includes(_selectedDisplay)) {\n      _selectedDisplay = 'VGA'\n    }\n    if (!FONTS.includes(_selectedFont)) {\n      _selectedFont = 'neodgm'\n    }\n\n    _ctx2d = terminalRef.current.getContext('2d')\n    if (_ctx2d) {\n      _ctx2d.fillStyle = COLOR[_attr.textColor]\n      _ctx2d.font = 'normal 16px ' + _selectedFont\n      _ctx2d.textBaseline = 'top'\n    } else {\n      alert('error: cannot create a canvas context2d!')\n    }\n\n    displayChanged(true)\n  }\n/*\n  const rzClose = () => {\n    setRzDiag(false)\n    write('파일수신이 완료되었습니다. [ENTER]를 눌러주세요.')\n    terminalClicked()\n  }\n*/\n  const onBeforeUnload = () => {\n    _io.disconnect()\n  }\n\n  const setupNetwork = () => {\n    // Need to wait some time for download TTF fonts\n    setTimeout(() => {\n      const host = (process.env.NODE_ENV === 'production')\n        ? 'http://bbs.olddos.kr'\n        : 'localhost:8080'\n\n      debug('Start conecting...')\n      _io = io(host)\n\n      _io.on('connect', () => {\n        debug('Connected')\n        setConnDiag(false)\n        terminalClicked()\n      })\n\n      _io.on('disconnect', () => {\n        debug('Disconnected')\n        write('접속이 종료되었습니다.\\r\\n')\n      })\n\n      _io.on('data', (data) => {\n        // Check if the password input phrase\n        const pattern = /비밀번호 : /\n        const result = pattern.exec(Buffer.from(data).toString())\n        if (result) {\n          setCommandType('password')\n        } else {\n          setCommandType('text')\n        }\n        write(Buffer.from(data).toString())\n      })\n/*\n      _io.on('rz-begin', (filename) => {\n        rzFilename = filename\n        rzDiag = true\n        rzReceived = 0\n        rzTotal = 0\n        setrzdte\n        $nextTick(() => {\n          $refs.rzDiagText.innerText =\n            '파일을 준비중입니다\\n\\n' + rzFilename\n        })\n      })\n\n      _io.on('rz-progress', progress => {\n        // Progress: { received, total, bps }\n        rzReceived = progress.received\n        rzTotal = progress.total\n\n        const percent = ((rzReceived / rzTotal) * 100).toFixed(2)\n        $refs.rzProgress.innerText = '(' + percent + '% / 100%)'\n      })\n\n      _io.on('rz-end', result => {\n        if (result.code === 0) {\n          rzReceived = rzTotal\n\n          $nextTick(() => {\n            $refs.rzDiagText.innerText =\n              '파일이 준비되었습니다\\n\\n' + rzFilename\n            $refs.rzProgress.innerText = '(100% / 100%)'\n            rzUrl = result.url\n          })\n        } else {\n          alert('error: download failure!')\n        }\n      })*/\n    }, 4000)\n  }\n\n  const applyEscape = () => {\n    // Text color\n    {\n      const pattern = /\\[=([0-9]*)F/\n      const result = pattern.exec(_escape)\n      if (result) {\n        const param1 = parseInt(result[1], 10)\n        _attr.textColor = isNaN(param1) ? 15 : param1\n      }\n    }\n    // Background color\n    {\n      const pattern = /\\[=([0-9]*)G/\n      const result = pattern.exec(_escape)\n      if (result) {\n        const param1 = parseInt(result[1], 10)\n        _attr.backgroundColor = isNaN(param1) ? 1 : param1\n      }\n    }\n    // Reverse color\n    {\n      const pattern = /\\[([0-9]*)m/\n      const result = pattern.exec(_escape)\n      if (result) {\n        const param1 = parseInt(result[1], 10)\n        if (!isNaN(param1)) {\n          if (param1 === 7) {\n            _attr.reversed = true\n          } else {\n            _attr.reversed = false\n          }\n        } else {\n          _attr.reversed = false\n        }\n      }\n    }\n    // Cursor position set\n    {\n      // Move _cursor to specific position\n      {\n        const pattern = /\\[([0-9]*);([0-9]*)H/\n        const result = pattern.exec(_escape)\n        if (result) {\n          const param1 = parseInt(result[1], 10)\n          const param2 = parseInt(result[2], 10)\n\n          _cursor.y = isNaN(param1) ? 0 : param1 - 1\n          _cursor.x = isNaN(param2) ? 0 : param2 - 1\n        } else {\n          const pattern = /\\[([0-9]*)H/\n          const result = pattern.exec(_escape)\n          if (result) {\n            const param1 = parseInt(result[1], 10)\n            _cursor.y = isNaN(param1) ? 0 : param1 - 1\n            _cursor.x = 0\n          }\n        }\n      }\n      // Move _cursor y\n      {\n        const pattern = /\\[([0-9]*)A/\n        const result = pattern.exec(_escape)\n        if (result) {\n          const param1 = parseInt(result[1], 10)\n          _cursor.y -= isNaN(param1) ? 0 : param1\n          if (_cursor.y < 0) {\n            _cursor.y = 0\n            _cursor.x = 0\n          }\n        }\n      }\n      // Move _cursor x\n      {\n        const pattern = /\\[([0-9]*)C/\n        const result = pattern.exec(_escape)\n        if (result) {\n          const param1 = parseInt(result[1], 10)\n          _cursor.x = isNaN(param1) ? 0 : param1 - 1\n        }\n      }\n      // Store and restore the _cursor position\n      {\n        if (_escape === '[s') {\n          _cursorStore = { x: _cursor.x, y: _cursor.y }\n        } else if (_escape === '[u') {\n          _cursor = { x: _cursorStore.x, y: _cursorStore.y }\n        }\n      }\n    }\n    // Clear the screen\n    {\n      if (_escape === '\\x1b[2J') {\n        _ctx2d.fillStyle = COLOR[_attr.backgroundColor]\n        _ctx2d.fillRect(\n          0,\n          0,\n          terminalRef.current.width,\n          terminalRef.current.height\n        )\n\n        // Clear whole webpage\n        document.getElementsByTagName('body')[0].style.backgroundColor =\n          COLOR[_attr.backgroundColor]\n\n        // Refresh _lastPageText (after 2J, there is no any other text)\n        _lastPageText = '\\x1b[2J'\n        _lastPageTextPos = [\n          { x: 0, y: 0 },\n          { x: 0, y: 0 },\n          { x: 0, y: 0 },\n          { x: 0, y: 0 }\n        ]\n        _cursor.x = 0\n        _cursor.y = 0\n      }\n    }\n    // Clear a line\n    {\n      if (_escape.endsWith('[2K')) {\n        _ctx2d.fillStyle = COLOR[_attr.backgroundColor]\n        _ctx2d.fillRect(\n          0,\n          _cursor.y * FONT_HEIGHT,\n          terminalRef.current.clientWidth,\n          FONT_HEIGHT\n        )\n      } else if (_escape.endsWith('[1K')) {\n        _ctx2d.fillStyle = COLOR[_attr.backgroundColor]\n        _ctx2d.fillRect(\n          0,\n          _cursor.y * FONT_HEIGHT,\n          (_cursor.x + 1) * FONT_WIDTH,\n          FONT_HEIGHT\n        )\n      } else if (_escape.endsWith('[0K') || _escape.endsWith('[K')) {\n        _ctx2d.fillStyle = COLOR[_attr.backgroundColor]\n        _ctx2d.fillRect(\n          _cursor.x * FONT_WIDTH,\n          _cursor.y * FONT_HEIGHT,\n          terminalRef.current.clientWidth - _cursor.x * FONT_WIDTH,\n          FONT_HEIGHT\n        )\n      }\n    }\n    // Set the window area\n    {\n      const pattern = /\\[([0-9]*);([0-9]*)r/\n      const result = pattern.exec(_escape)\n      if (result) {\n        const param1 = parseInt(result[1], 10)\n        const param2 = parseInt(result[2], 10)\n        const scrollFrom = isNaN(param1) ? 0 : param1 - 1\n        const scrollTo = isNaN(param2) ? 0 : param2 - 1\n\n        // Reset the window height\n        if (scrollFrom <= 0 && scrollTo <= 0) {\n          WINDOW_TOP = 0\n          WINDOW_BOTTOM = SCREEN_HEIGHT - 1\n        } else {\n          WINDOW_TOP = scrollFrom\n          WINDOW_BOTTOM = scrollTo\n        }\n      }\n    }\n  }\n\n  const endOfEscape = () => {\n    if (!_escape) {\n      return false\n    }\n    const lastChar = _escape.charAt(_escape.length - 1)\n    if ('@ABCDFGHJKSfhlmprsu'.indexOf(lastChar) !== -1) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  const rebuildSmartMouse = () => {\n    _smartMouse = []\n    smartMouseBoxRef.current.style.visibility = 'hidden'\n\n    const smartMousePatterns = [\n      /([0-9]+)\\.\\s[ㄱ-힣a-z/\\s]+/gi, // 99. xx\n      /\\[([0-9]+)\\]\\s[ㄱ-힣a-z/\\s]+/gi, // [99].xx\n      /\\(([a-z]+),/gi, // (x,\n      /,([a-z]+),/gi, // ,x,\n      /,([a-z]+)\\)/gi, // ,x)\n      /\\(([a-z]+)\\)/gi, // (x)\n      /\\[([a-z0-9]+)\\]/gi, // [x]\n      /(https?:\\/\\/[a-z0-9-\\.\\/?&_=#]+)/gi, // URL\n      /([0-9]+) +.+ +[0-9-]+ +[0-9]+ + [0-9]+ +.*/gi, // Article\n      /([0-9]+) +[0-9\\.]+ .*/gi, // News (JTBC)\n      /([0-9]+) +.+ +[0-9-]+ .*/gi, // News (Oh my news, IT news)\n      /([0-9]+) +(JTBC|오마이뉴스|전자신문|속보|정치|연예|전체기사|주요기사|사회|오늘의 뉴스|게임)/gi // News Titles\n    ]\n\n    for (const pattern of smartMousePatterns) {\n      var result = null\n      while ((result = pattern.exec(_lastPageText))) {\n        // Remove ANSI _escape code from the string(result[0])\n        result[0] = result[0].replace(/\\x1b\\[=.{1,3}[FG]{1}/gi, '').trim()\n\n        // If there is doubleWidthCharacter, replace it to '가' for correct measuring\n        var normalText = ''\n        for (const ch of result[0]) {\n          if (doubleWidth(ch)) {\n            normalText += '가'\n          } else {\n            normalText += ch\n          }\n        }\n\n        const link = {\n          command: result[1],\n          px: {\n            x: (_lastPageTextPos[result.index].x * FONT_WIDTH) * _rate,\n            y: (_lastPageTextPos[result.index].y * FONT_HEIGHT) * _rate,\n            width: _ctx2d.measureText(normalText).width * _rate,\n            height: FONT_HEIGHT * _rate\n          }\n        }\n        _smartMouse.push(link)\n      }\n    }\n  }\n\n  const moveCommandInputPosition = () => {\n    const bcr = terminalRef.current.getBoundingClientRect()\n\n    _rate = bcr.width / CANVAS_WIDTH\n    const scaledCursorX = (_cursor.x * FONT_WIDTH) * _rate\n    const scaledCursorY = (_cursor.y * FONT_HEIGHT) * _rate\n\n    const tmLeft = bcr.left + window.pageXOffset\n    const tmTop = bcr.top + window.pageYOffset\n    const tmWidth = bcr.width\n\n    const cmLeft = tmLeft + scaledCursorX\n    const cmTop = tmTop + scaledCursorY\n    const cmWidth = tmWidth - (cmLeft - tmLeft)\n\n    commandRef.current.style.left = `${cmLeft}px`\n    commandRef.current.style.top = `${cmTop}px`\n    commandRef.current.style.width = `${cmWidth}px`\n\n    commandRef.current.style.fontSize = `${16 * _rate}px`\n    commandRef.current.style.height = `${16 * _rate}px`\n  }\n\n  const write = (text) => {\n    for (const ch of text) {\n      _lastPageText += ch\n      _lastPageTextPos.push({ x: _cursor.x, y: _cursor.y })\n      if (_escape) {\n        _escape = _escape + ch\n        if (endOfEscape()) {\n          applyEscape()\n          _escape = null\n        }\n      } else {\n        switch (ch.charCodeAt(0)) {\n          case 27:\n            _escape = '\\x1b'\n            break\n\n          case 13:\n            cr()\n            break\n\n          case 10:\n            lf()\n            break\n\n          case 0: // NULL\n          case 24: // ZDLE\n          case 17: // XON\n          case 138: // LF of sz\n          case 65533: // Unknown\n            break\n\n          default:\n            {\n              const charWidth = ch.charCodeAt(0) < 0x80 ? 1 : 2\n              const cursor_px = {\n                x: _cursor.x * FONT_WIDTH,\n                y: _cursor.y * FONT_HEIGHT\n              }\n              let textColor = COLOR[_attr.textColor]\n              let backgroundColor = COLOR[_attr.backgroundColor]\n\n              if (doubleWidth(ch)) {\n                _ctx2d.save()\n                _ctx2d.scale(2, 1)\n                cursor_px.x /= 2\n              }\n\n              if (_attr.reversed) {\n                textColor = COLOR[_attr.backgroundColor]\n                backgroundColor = COLOR[_attr.textColor]\n              }\n\n              _ctx2d.fillStyle = backgroundColor\n              _ctx2d.fillRect(\n                cursor_px.x,\n                cursor_px.y,\n                charWidth * FONT_WIDTH,\n                FONT_HEIGHT\n              )\n              _ctx2d.fillStyle = textColor\n              _ctx2d.fillText(ch, cursor_px.x, cursor_px.y)\n\n              if (doubleWidth(ch)) {\n                _ctx2d.restore()\n              }\n\n              _cursor.x += charWidth\n            }\n            break\n        }\n      }\n    }\n\n    // Rebuild smart mouse\n    rebuildSmartMouse()\n\n    // Move the command textfield to the _cursor position\n    moveCommandInputPosition()\n  }\n\n  useEffect(() => {\n    debug('Setup')\n\n    setupTerminal()\n    setupNetwork()\n    window.addEventListener('resize', onResize)\n    window.addEventListener('beforeunload', onBeforeUnload)\n\n    return (() => {\n      window.removeEventListener('resize', this.onResize)\n      window.removeEventListener('beforeunload', this.onBeforeUnload)\n    })\n  }, [])\n\n  return (\n    <div>\n      <Navbar bg='primary' variant='dark'>\n        <img src='/logo.png' className='mr-2' width='24px' height='24px' />\n        <Navbar.Brand>\n          <span style={{ color: 'yellow' }}>도</span>\n          <span style={{ color: 'white' }}>/</span>\n          <span style={{ color: 'red' }}>스</span>\n          <span style={{ color: 'white' }}>/</span>\n          <span style={{ color: 'cyan' }}>박</span>\n          <span style={{ color: 'white' }}>/</span>\n          <span style={{ color: 'lightgreen' }}>물</span>\n          <span style={{ color: 'white' }}>/</span>\n          <span style={{ color: 'yellow' }}>관</span>\n        </Navbar.Brand>\n        <Nav onSelect={(selectedKey) => fontSelected(selectedKey)}>\n          <NavDropdown title='글꼴'>\n            {FONTS.map((font) => (\n              <NavDropdown.Item key={font.value} eventKey={font.value}>{font.name}</NavDropdown.Item>\n            ))}\n          </NavDropdown>\n        </Nav>\n        <Nav\n          onSelect={(selectedKey) => displaySelected(selectedKey)}\n        >\n          <NavDropdown title='색상'>\n            {DISPLAYS.map((display) => (\n              <NavDropdown.Item key={display} eventKey={display}>{display}</NavDropdown.Item>\n            ))}\n          </NavDropdown>\n        </Nav>\n        <Button onClick={() => copyToClipboard()}>갈무리</Button>\n      </Navbar>\n      <div class='text-center mt-3'>\n        <canvas\n          ref={terminalRef}\n          width={CANVAS_WIDTH}\n          height={CANVAS_HEIGHT}\n          className='w-100'\n          style={{ maxWidth: '700px' }}\n          onClick={() => terminalClicked()}\n          onMouseMove={(event) => mouseMove(event.clientX, event.clientY)}\n        ></canvas>\n        <div\n          ref={smartMouseBoxRef}\n          className='smart-mouse-box'\n          onClick={() => smartMouseClicked()}\n        ></div>\n        <input\n          ref={commandRef}\n          type={commandType}\n          className='command'\n          value={command}\n          onChange={(event) => setCommand(event.target.value)}\n          onKeyUp={(event) => onKeyUp(event.key)}\n        />\n      </div>\n      <div className='text-center mt-3'>\n        <a href='mailto:gcjjyy@gmail.com'>© 2019 gcjjyy@gmail.com</a>\n      </div>\n      <LoadingModal show={connDiag} message='접속 중입니다..'/>\n      <LoadingModal show={applyDiag} message='적용 중입니다..'/>\n    </div>\n  )\n}\n\nexport default App\n","const THEMES = {\n  VGA: [\n    '#000000', // Black\n    '#000080', // Blue\n    '#008000', // Green\n    '#008080', // Cyan\n    '#800000', // Red\n    '#800080', // Magenta\n    '#804000', // Brown\n    '#808080', // Light gray\n    '#404040', // Gray\n    '#4040ff', // Light blue\n    '#40ff40', // Light green\n    '#40ffff', // Light cyan\n    '#ff4040', // Light red\n    '#ff40ff', // Light magenta\n    '#ffff40', // Yellow\n    '#ffffff' // White\n  ],\n  ACI: [\n    '#363636',\n    '#0d1926',\n    '#83ff08',\n    '#ff8308',\n    '#0883ff',\n    '#8308ff',\n    '#08ff83',\n    '#b6b6b6',\n    '#424242',\n    '#ff1e8e',\n    '#8eff1e',\n    '#ff8e1e',\n    '#1e8eff',\n    '#8e1eff',\n    '#1eff8e',\n    '#e4f4ff'\n  ],\n  HERCULES: [\n    '#000000',\n    '#000000',\n    '#808080',\n    '#808080',\n    '#808080',\n    '#808080',\n    '#808080',\n    '#a0a0a0',\n    '#a0a0a0',\n    '#808080',\n    '#a0a0a0',\n    '#a0a0a0',\n    '#a0a0a0',\n    '#a0a0a0',\n    '#ffffff',\n    '#ffffff'\n  ]\n}\n\nexport default THEMES\n"],"sourceRoot":""}