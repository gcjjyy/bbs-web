{"version":3,"sources":["reportWebVitals.js","index.js","LoadingModal.js","App.js","themes.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","LoadingModal","show","message","size","backdrop","centered","Header","Body","className","animation","debug","require","CANVAS_WIDTH","FONT_HEIGHT","WINDOW_TOP","WINDOW_BOTTOM","SCREEN_HEIGHT","COLOR","FONTS","name","value","DISPLAYS","_io","_ctx2d","_rate","_selectedDisplay","_selectedFont","_escape","_cursor","x","y","_cursorStore","_attr","textColor","backgroundColor","reversed","_lastPageText","_lastPageTextPos","_smartMouse","_smartMouseCmd","useState","connDiag","setConnDiag","command","setCommand","commandType","setCommandType","applyDiag","setApplyDiag","rzDiag","setRzDiag","rzDiagText","setRzDiagText","rzProgress","setRzProgress","rzFilename","setRzFilename","rzReceived","setRzReceived","rzFinished","setRzFinished","rzTotal","setRzTotal","rzUrl","setRzUrl","terminalRef","useRef","smartMouseBoxRef","commandRef","onResize","rebuildSmartMouse","moveCommandInputPosition","terminalClicked","current","focus","doubleWidth","ch","charCodeAt","measureText","width","lf","copy","getImageData","putImageData","fillStyle","fillRect","pos","screenScrollUp","enterCommand","emit","displayChanged","isInitial","i","THEMES","style","fontFamily","font","cookies","set","expires","setTimeout","getElementsByTagName","write","onBeforeUnload","disconnect","applyEscape","result","exec","param1","parseInt","isNaN","param2","height","endsWith","clientWidth","scrollFrom","scrollTo","endOfEscape","lastChar","charAt","length","indexOf","visibility","pattern","replace","trim","normalText","link","px","index","push","bcr","getBoundingClientRect","scaledCursorX","scaledCursorY","tmLeft","left","window","pageXOffset","tmTop","top","pageYOffset","tmWidth","cmLeft","cmTop","cmWidth","fontSize","text","charWidth","cursor_px","save","scale","fillText","restore","useEffect","get","includes","getContext","textBaseline","alert","setupTerminal","io","on","data","Buffer","from","toString","filename","progress","received","total","code","url","addEventListener","removeEventListener","bg","variant","src","Brand","color","onSelect","selectedKey","title","map","Item","eventKey","display","onClick","esc","copyToClipboard","ref","maxWidth","onMouseMove","event","clientX","clientY","mouseX","mouseY","sm","mouseMove","open","type","onChange","target","onKeyUp","key","href","animated","now","label","download","VGA","ACI","HERCULES"],"mappings":"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","file":"static/js/main.74e9be0f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nimport './Flatly-bootstrap.min.css'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","import { Modal, Spinner } from 'react-bootstrap'\n\nfunction LoadingModal({ show, message }) {\n  return (\n    <Modal show={show} size='xs' backdrop='static' centered>\n      <Modal.Header>\n        {message}\n      </Modal.Header>\n      <Modal.Body className='text-center m-4'>\n        <Spinner animation='border' />\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default LoadingModal\n","import cookies from 'browser-cookies'\nimport copy from 'copy-to-clipboard'\nimport { useEffect, useRef, useState } from 'react'\nimport { Button, Nav, Modal, ProgressBar, Navbar, NavDropdown } from 'react-bootstrap'\nimport io from 'socket.io-client'\nimport './App.css'\nimport LoadingModal from './LoadingModal'\nimport THEMES from './themes'\n\nconst debug = require('debug')('bbs-web')\n\nconst CANVAS_WIDTH = 640\nconst CANVAS_HEIGHT = 528\n\nconst FONT_WIDTH = 8\nconst FONT_HEIGHT = 16\nconst SCREEN_HEIGHT = 33\n\nconst SMART_MOUSE_BORDER = 2\n\nlet WINDOW_TOP = 0\nlet WINDOW_BOTTOM = SCREEN_HEIGHT - 1\n\nconst COLOR = []\nconst FONTS = [\n  { name: '둥근모', value: 'neodgm' },\n  { name: '굵은체', value: 'neoiyg' },\n  { name: '필기체', value: 'neopil' },\n  { name: '굵은달', value: 'neoancient' },\n  { name: '샘물체', value: 'neowater' }\n]\nconst DISPLAYS = ['VGA', 'ACI', 'HERCULES']\n\nlet _io = null\nlet _ctx2d = null\nlet _rate = 1.0\nlet _selectedDisplay = 'VGA'\nlet _selectedFont = 'neodgm'\nlet _escape = null\nlet _cursor = { x: 0, y: 0 }\nlet _cursorStore = { x: 0, y: 0 }\nlet _attr = { textColor: 15, backgroundColor: 1, reversed: false }\nlet _lastPageText = ''\nlet _lastPageTextPos = []\nlet _smartMouse = []\nlet _smartMouseCmd = null\n\nfunction App() {\n  const [connDiag, setConnDiag] = useState(true)\n  const [command, setCommand] = useState('')\n  const [commandType, setCommandType] = useState('text')\n\n  const [applyDiag, setApplyDiag] = useState(false)\n\n  const [rzDiag, setRzDiag] = useState(false)\n  const [rzDiagText, setRzDiagText] = useState('')\n  const [rzProgress, setRzProgress] = useState('')\n  const [rzFilename, setRzFilename] = useState(null)\n  const [rzReceived, setRzReceived] = useState(0)\n  const [rzFinished, setRzFinished] = useState(false)\n  const [rzTotal, setRzTotal] = useState(1) // Set 1 as default value to prevent div with zero\n  const [rzUrl, setRzUrl] = useState(null)\n\n  const terminalRef = useRef()\n  const smartMouseBoxRef = useRef()\n  const commandRef = useRef()\n\n  const fontSelected = (font) => {\n    _selectedFont = font\n    displayChanged(false)\n  }\n\n  const displaySelected = (display) => {\n    _selectedDisplay = display\n    displayChanged(false)\n  }\n\n  const onResize = () => {\n    rebuildSmartMouse()\n    moveCommandInputPosition()\n  }\n\n  const copyToClipboard = () => {\n    let normalText = ''\n    let esc = false\n\n    for (const ch of _lastPageText) {\n      if (!esc && ch === '\\x1b') {\n        esc = true\n        continue\n      }\n\n      if (esc && '@ABCDFGHJKSfhlmprsu'.indexOf(ch) !== -1) {\n        esc = false\n        continue\n      }\n\n      if (!esc) {\n        normalText += ch\n      }\n    }\n\n    normalText = normalText.replace(/\\x0d\\x00/gi, '')\n\n    if (copy(normalText)) {\n      alert('현재 화면이 클립보드에 복사되었습니다.')\n    } else {\n      alert('클립보드에 복사 중 오류가 발생하였습니다.')\n    }\n  }\n\n  const terminalClicked = () => {\n    commandRef.current.focus()\n  }\n\n  const mouseMove = (clientX, clientY) => {\n    const mouseX = clientX - terminalRef.current.getBoundingClientRect().left\n    const mouseY = clientY - terminalRef.current.getBoundingClientRect().top\n\n    for (const sm of _smartMouse) {\n      if (\n        mouseX >= sm.px.x &&\n        mouseY >= sm.px.y &&\n        mouseX < sm.px.x + sm.px.width &&\n        mouseY < sm.px.y + sm.px.height\n      ) {\n        // Intenally set the smart mouse command\n        _smartMouseCmd = sm.command\n\n        // Mouse smart mouse box to the position\n        smartMouseBoxRef.current.style.left =\n          sm.px.x -\n          SMART_MOUSE_BORDER +\n          terminalRef.current.getBoundingClientRect().left +\n          window.pageXOffset +\n          'px'\n        smartMouseBoxRef.current.style.top =\n          sm.px.y -\n          SMART_MOUSE_BORDER +\n          terminalRef.current.getBoundingClientRect().top +\n          window.pageYOffset +\n          'px'\n        smartMouseBoxRef.current.style.width =\n          sm.px.width + 2 * SMART_MOUSE_BORDER + 'px'\n        smartMouseBoxRef.current.style.height =\n          sm.px.height + 2 * SMART_MOUSE_BORDER + 'px'\n        smartMouseBoxRef.current.style.visibility = 'visible'\n\n        return\n      }\n    }\n\n    // If no smart mouse position has detected, hide the smart mouse box\n    smartMouseBoxRef.current.style.visibility = 'hidden'\n  }\n\n  const smartMouseClicked = () => {\n    if (/https?:\\/\\//.exec(_smartMouseCmd)) {\n      window.open(_smartMouseCmd, '_blank')\n    } else {\n      enterCommand(_smartMouseCmd)\n    }\n\n    smartMouseBoxRef.current.style.visibility = 'hidden'\n    _smartMouseCmd = ''\n\n    terminalClicked()\n  }\n\n  const onKeyUp = (key) => {\n    if (key === 'Enter') {\n      enterCommand(command)\n    }\n  }\n\n  const doubleWidth = (ch) => {\n    return (ch.charCodeAt(0) >= 0x80) && (_ctx2d.measureText(ch).width <= 9)\n  }\n\n  const screenScrollUp = () => {\n    const copy = _ctx2d.getImageData(\n      0,\n      FONT_HEIGHT * (WINDOW_TOP + 1),\n      CANVAS_WIDTH,\n      FONT_HEIGHT * (WINDOW_BOTTOM - WINDOW_TOP)\n    )\n    _ctx2d.putImageData(copy, 0, FONT_HEIGHT * WINDOW_TOP)\n    _ctx2d.fillStyle = COLOR[_attr.backgroundColor]\n    _ctx2d.fillRect(\n      0,\n      WINDOW_BOTTOM * FONT_HEIGHT,\n      CANVAS_WIDTH,\n      FONT_HEIGHT\n    )\n\n    // Modify the position of _lastPageTextPos (scroll up)\n    for (const pos of _lastPageTextPos) {\n      if (pos.y >= WINDOW_TOP && pos.y <= WINDOW_BOTTOM) {\n        pos.y--\n      }\n    }\n  }\n\n  const cr = () => {\n    _cursor.x = 0\n  }\n\n  const lf = () => {\n    _cursor.y++\n    if (_cursor.y > WINDOW_BOTTOM) {\n      _cursor.y = WINDOW_BOTTOM\n      screenScrollUp()\n    }\n  }\n\n  const enterCommand = (command) => {\n    if (command) {\n      _io.emit('data', `${command}\\r\\n`)\n    } else {\n      _io.emit('data', '\\r\\n')\n    }\n    setCommand('')\n  }\n\n  const displayChanged = (isInitial = false) => {\n    for (let i = 0; i < 16; i++) {\n      COLOR[i] = THEMES[_selectedDisplay][i]\n    }\n\n    terminalRef.current.style.fontFamily = _selectedFont\n    commandRef.current.style.fontFamily = _selectedFont\n\n    _ctx2d.font = `normal 16px ${_selectedFont}`\n\n    terminalClicked()\n\n    cookies.set('display', _selectedDisplay, { expires: 365 })\n    cookies.set('font', _selectedFont, { expires: 365 })\n\n    if (!isInitial) {\n      setApplyDiag(true)\n\n      setTimeout(() => {\n        // Clear whole webpage\n      document.getElementsByTagName('body')[0].style.backgroundColor =\n          COLOR[_attr.backgroundColor]\n\n        terminalRef.current.style.backgroundColor =\n          COLOR[_attr.backgroundColor]\n\n        // Rewrite last page text\n        write(_lastPageText)\n        setApplyDiag(false)\n\n        terminalClicked()\n      }, 4000)\n    }\n  }\n\n  const setupTerminal = () => {\n    _selectedDisplay = cookies.get('display') ?? 'VGA'\n    _selectedFont = cookies.get('font') ?? 'neodgm'\n\n    // Value check for the prevent error by the previous value\n    if (!DISPLAYS.includes(_selectedDisplay)) {\n      _selectedDisplay = 'VGA'\n    }\n    if (!FONTS.includes(_selectedFont)) {\n      _selectedFont = 'neodgm'\n    }\n\n    _ctx2d = terminalRef.current.getContext('2d')\n    if (_ctx2d) {\n      _ctx2d.fillStyle = COLOR[_attr.textColor]\n      _ctx2d.font = 'normal 16px ' + _selectedFont\n      _ctx2d.textBaseline = 'top'\n    } else {\n      alert('error: cannot create a canvas context2d!')\n    }\n\n    displayChanged(true)\n  }\n\n  const rzClose = () => {\n    setRzDiag(false)\n    setRzFilename(false)\n    write('파일수신이 완료되었습니다. [ENTER]를 눌러주세요.')\n    terminalClicked()\n  }\n\n  const onBeforeUnload = () => {\n    _io.disconnect()\n  }\n\n  const setupNetwork = () => {\n    // Need to wait some time for download TTF fonts\n    setTimeout(() => {\n      const host = (process.env.NODE_ENV === 'production')\n        ? 'http://bbs.olddos.kr'\n        : 'localhost:8080'\n\n      debug('Start conecting...')\n      _io = io(host)\n\n      _io.on('connect', () => {\n        debug('Connected')\n        setConnDiag(false)\n        terminalClicked()\n      })\n\n      _io.on('disconnect', () => {\n        debug('Disconnected')\n        write('접속이 종료되었습니다.\\r\\n')\n      })\n\n      _io.on('data', (data) => {\n        // Check if the password input phrase\n        const pattern = /비밀번호 : /\n        const result = pattern.exec(Buffer.from(data).toString())\n        if (result) {\n          setCommandType('password')\n        } else {\n          setCommandType('text')\n        }\n        write(Buffer.from(data).toString())\n      })\n\n      _io.on('rz-begin', (filename) => {\n        debug(`rz-begin: ${filename}`)\n\n        setRzFilename(filename)\n        setRzDiag(true)\n        setRzFinished(false)\n        setRzReceived(0)\n        setRzTotal(0)\n        setRzDiagText(`파일 준비중: ${filename}`)\n      })\n\n      _io.on('rz-progress', (progress) => {\n        // Progress: { received, total, bps }\n        setRzReceived(progress.received)\n        setRzTotal(progress.total)\n        setRzProgress(`${progress.received} / ${progress.total}`)\n      })\n\n      _io.on('rz-end', result => {\n        if (result.code === 0) {\n          setRzReceived(rzTotal)\n          setRzFinished(true)\n\n          setRzDiagText(`파일 준비 완료: ${rzFilename}`)\n          setRzUrl(result.url)\n        } else {\n          alert('error: download failure!')\n        }\n      })\n    }, 4000)\n  }\n\n  const applyEscape = () => {\n    // Text color\n    {\n      const pattern = /\\[=([0-9]*)F/\n      const result = pattern.exec(_escape)\n      if (result) {\n        const param1 = parseInt(result[1], 10)\n        _attr.textColor = isNaN(param1) ? 15 : param1\n      }\n    }\n    // Background color\n    {\n      const pattern = /\\[=([0-9]*)G/\n      const result = pattern.exec(_escape)\n      if (result) {\n        const param1 = parseInt(result[1], 10)\n        _attr.backgroundColor = isNaN(param1) ? 1 : param1\n      }\n    }\n    // Reverse color\n    {\n      const pattern = /\\[([0-9]*)m/\n      const result = pattern.exec(_escape)\n      if (result) {\n        const param1 = parseInt(result[1], 10)\n        if (!isNaN(param1)) {\n          if (param1 === 7) {\n            _attr.reversed = true\n          } else {\n            _attr.reversed = false\n          }\n        } else {\n          _attr.reversed = false\n        }\n      }\n    }\n    // Cursor position set\n    {\n      // Move _cursor to specific position\n      {\n        const pattern = /\\[([0-9]*);([0-9]*)H/\n        const result = pattern.exec(_escape)\n        if (result) {\n          const param1 = parseInt(result[1], 10)\n          const param2 = parseInt(result[2], 10)\n\n          _cursor.y = isNaN(param1) ? 0 : param1 - 1\n          _cursor.x = isNaN(param2) ? 0 : param2 - 1\n        } else {\n          const pattern = /\\[([0-9]*)H/\n          const result = pattern.exec(_escape)\n          if (result) {\n            const param1 = parseInt(result[1], 10)\n            _cursor.y = isNaN(param1) ? 0 : param1 - 1\n            _cursor.x = 0\n          }\n        }\n      }\n      // Move _cursor y\n      {\n        const pattern = /\\[([0-9]*)A/\n        const result = pattern.exec(_escape)\n        if (result) {\n          const param1 = parseInt(result[1], 10)\n          _cursor.y -= isNaN(param1) ? 0 : param1\n          if (_cursor.y < 0) {\n            _cursor.y = 0\n            _cursor.x = 0\n          }\n        }\n      }\n      // Move _cursor x\n      {\n        const pattern = /\\[([0-9]*)C/\n        const result = pattern.exec(_escape)\n        if (result) {\n          const param1 = parseInt(result[1], 10)\n          _cursor.x = isNaN(param1) ? 0 : param1 - 1\n        }\n      }\n      // Store and restore the _cursor position\n      {\n        if (_escape === '[s') {\n          _cursorStore = { x: _cursor.x, y: _cursor.y }\n        } else if (_escape === '[u') {\n          _cursor = { x: _cursorStore.x, y: _cursorStore.y }\n        }\n      }\n    }\n    // Clear the screen\n    {\n      if (_escape === '\\x1b[2J') {\n        _ctx2d.fillStyle = COLOR[_attr.backgroundColor]\n        _ctx2d.fillRect(\n          0,\n          0,\n          terminalRef.current.width,\n          terminalRef.current.height\n        )\n\n        // Clear whole webpage\n        document.getElementsByTagName('body')[0].style.backgroundColor =\n          COLOR[_attr.backgroundColor]\n\n        // Refresh _lastPageText (after 2J, there is no any other text)\n        _lastPageText = '\\x1b[2J'\n        _lastPageTextPos = [\n          { x: 0, y: 0 },\n          { x: 0, y: 0 },\n          { x: 0, y: 0 },\n          { x: 0, y: 0 }\n        ]\n        _cursor.x = 0\n        _cursor.y = 0\n      }\n    }\n    // Clear a line\n    {\n      if (_escape.endsWith('[2K')) {\n        _ctx2d.fillStyle = COLOR[_attr.backgroundColor]\n        _ctx2d.fillRect(\n          0,\n          _cursor.y * FONT_HEIGHT,\n          terminalRef.current.clientWidth,\n          FONT_HEIGHT\n        )\n      } else if (_escape.endsWith('[1K')) {\n        _ctx2d.fillStyle = COLOR[_attr.backgroundColor]\n        _ctx2d.fillRect(\n          0,\n          _cursor.y * FONT_HEIGHT,\n          (_cursor.x + 1) * FONT_WIDTH,\n          FONT_HEIGHT\n        )\n      } else if (_escape.endsWith('[0K') || _escape.endsWith('[K')) {\n        _ctx2d.fillStyle = COLOR[_attr.backgroundColor]\n        _ctx2d.fillRect(\n          _cursor.x * FONT_WIDTH,\n          _cursor.y * FONT_HEIGHT,\n          terminalRef.current.clientWidth - _cursor.x * FONT_WIDTH,\n          FONT_HEIGHT\n        )\n      }\n    }\n    // Set the window area\n    {\n      const pattern = /\\[([0-9]*);([0-9]*)r/\n      const result = pattern.exec(_escape)\n      if (result) {\n        const param1 = parseInt(result[1], 10)\n        const param2 = parseInt(result[2], 10)\n        const scrollFrom = isNaN(param1) ? 0 : param1 - 1\n        const scrollTo = isNaN(param2) ? 0 : param2 - 1\n\n        // Reset the window height\n        if (scrollFrom <= 0 && scrollTo <= 0) {\n          WINDOW_TOP = 0\n          WINDOW_BOTTOM = SCREEN_HEIGHT - 1\n        } else {\n          WINDOW_TOP = scrollFrom\n          WINDOW_BOTTOM = scrollTo\n        }\n      }\n    }\n  }\n\n  const endOfEscape = () => {\n    if (!_escape) {\n      return false\n    }\n    const lastChar = _escape.charAt(_escape.length - 1)\n    if ('@ABCDFGHJKSfhlmprsu'.indexOf(lastChar) !== -1) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  const rebuildSmartMouse = () => {\n    _smartMouse = []\n    smartMouseBoxRef.current.style.visibility = 'hidden'\n\n    const smartMousePatterns = [\n      /([0-9]+)\\.\\s[ㄱ-힣a-z/\\s]+/gi, // 99. xx\n      /\\[([0-9]+)\\]\\s[ㄱ-힣a-z/\\s]+/gi, // [99].xx\n      /\\(([a-z]+),/gi, // (x,\n      /,([a-z]+),/gi, // ,x,\n      /,([a-z]+)\\)/gi, // ,x)\n      /\\(([a-z]+)\\)/gi, // (x)\n      /\\[([a-z0-9]+)\\]/gi, // [x]\n      /(https?:\\/\\/[a-z0-9-\\.\\/?&_=#]+)/gi, // URL\n      /([0-9]+) +.+ +[0-9-]+ +[0-9]+ + [0-9]+ +.*/gi, // Article\n      /([0-9]+) +[0-9\\.]+ .*/gi, // News (JTBC)\n      /([0-9]+) +.+ +[0-9-]+ .*/gi, // News (Oh my news, IT news)\n      /([0-9]+) +(JTBC|오마이뉴스|전자신문|속보|정치|연예|전체기사|주요기사|사회|오늘의 뉴스|게임)/gi // News Titles\n    ]\n\n    for (const pattern of smartMousePatterns) {\n      var result = null\n      while ((result = pattern.exec(_lastPageText))) {\n        // Remove ANSI _escape code from the string(result[0])\n        result[0] = result[0].replace(/\\x1b\\[=.{1,3}[FG]{1}/gi, '').trim()\n\n        // If there is doubleWidthCharacter, replace it to '가' for correct measuring\n        var normalText = ''\n        for (const ch of result[0]) {\n          if (doubleWidth(ch)) {\n            normalText += '가'\n          } else {\n            normalText += ch\n          }\n        }\n\n        const link = {\n          command: result[1],\n          px: {\n            x: (_lastPageTextPos[result.index].x * FONT_WIDTH) * _rate,\n            y: (_lastPageTextPos[result.index].y * FONT_HEIGHT) * _rate,\n            width: _ctx2d.measureText(normalText).width * _rate,\n            height: FONT_HEIGHT * _rate\n          }\n        }\n        _smartMouse.push(link)\n      }\n    }\n  }\n\n  const moveCommandInputPosition = () => {\n    const bcr = terminalRef.current.getBoundingClientRect()\n\n    _rate = bcr.width / CANVAS_WIDTH\n    const scaledCursorX = (_cursor.x * FONT_WIDTH) * _rate\n    const scaledCursorY = (_cursor.y * FONT_HEIGHT) * _rate\n\n    const tmLeft = bcr.left + window.pageXOffset\n    const tmTop = bcr.top + window.pageYOffset\n    const tmWidth = bcr.width\n\n    const cmLeft = tmLeft + scaledCursorX\n    const cmTop = tmTop + scaledCursorY - ((20 - (16 * _rate)) / 2)\n    const cmWidth = tmWidth - (cmLeft - tmLeft)\n\n    commandRef.current.style.left = `${cmLeft}px`\n    commandRef.current.style.top = `${cmTop}px`\n    commandRef.current.style.width = `${cmWidth}px`\n\n    commandRef.current.style.fontSize = `${16 * _rate}px`\n    commandRef.current.style.height = '20px'\n  }\n\n  const write = (text) => {\n    for (const ch of text) {\n      _lastPageText += ch\n      _lastPageTextPos.push({ x: _cursor.x, y: _cursor.y })\n      if (_escape) {\n        _escape = _escape + ch\n        if (endOfEscape()) {\n          applyEscape()\n          _escape = null\n        }\n      } else {\n        switch (ch.charCodeAt(0)) {\n          case 27:\n            _escape = '\\x1b'\n            break\n\n          case 13:\n            cr()\n            break\n\n          case 10:\n            lf()\n            break\n\n          case 0: // NULL\n          case 24: // ZDLE\n          case 17: // XON\n          case 138: // LF of sz\n          case 65533: // Unknown\n            break\n\n          default:\n            {\n              const charWidth = ch.charCodeAt(0) < 0x80 ? 1 : 2\n              const cursor_px = {\n                x: _cursor.x * FONT_WIDTH,\n                y: _cursor.y * FONT_HEIGHT\n              }\n              let textColor = COLOR[_attr.textColor]\n              let backgroundColor = COLOR[_attr.backgroundColor]\n\n              if (doubleWidth(ch)) {\n                _ctx2d.save()\n                _ctx2d.scale(2, 1)\n                cursor_px.x /= 2\n              }\n\n              if (_attr.reversed) {\n                textColor = COLOR[_attr.backgroundColor]\n                backgroundColor = COLOR[_attr.textColor]\n              }\n\n              _ctx2d.fillStyle = backgroundColor\n              _ctx2d.fillRect(\n                cursor_px.x,\n                cursor_px.y,\n                charWidth * FONT_WIDTH,\n                FONT_HEIGHT\n              )\n              _ctx2d.fillStyle = textColor\n              _ctx2d.fillText(ch, cursor_px.x, cursor_px.y)\n\n              if (doubleWidth(ch)) {\n                _ctx2d.restore()\n              }\n\n              _cursor.x += charWidth\n            }\n            break\n        }\n      }\n    }\n\n    // Rebuild smart mouse\n    rebuildSmartMouse()\n\n    // Move the command textfield to the _cursor position\n    moveCommandInputPosition()\n  }\n\n  useEffect(() => {\n    debug('Setup')\n\n    setupTerminal()\n    setupNetwork()\n    window.addEventListener('resize', onResize)\n    window.addEventListener('beforeunload', onBeforeUnload)\n\n    return (() => {\n      window.removeEventListener('resize', this.onResize)\n      window.removeEventListener('beforeunload', this.onBeforeUnload)\n    })\n  }, [])\n\n  return (\n    <div>\n      <Navbar bg='primary' variant='dark'>\n        <img src='/logo.png' className='mr-2' width='24px' height='24px' />\n        <Navbar.Brand>\n          <span style={{ color: 'yellow' }}>도</span>\n          <span style={{ color: 'white' }}>/</span>\n          <span style={{ color: 'red' }}>스</span>\n          <span style={{ color: 'white' }}>/</span>\n          <span style={{ color: 'cyan' }}>박</span>\n          <span style={{ color: 'white' }}>/</span>\n          <span style={{ color: 'lightgreen' }}>물</span>\n          <span style={{ color: 'white' }}>/</span>\n          <span style={{ color: 'yellow' }}>관</span>\n        </Navbar.Brand>\n        <Nav onSelect={(selectedKey) => fontSelected(selectedKey)}>\n          <NavDropdown title='글꼴'>\n            {FONTS.map((font) => (\n              <NavDropdown.Item key={font.value} eventKey={font.value}>{font.name}</NavDropdown.Item>\n            ))}\n          </NavDropdown>\n        </Nav>\n        <Nav\n          onSelect={(selectedKey) => displaySelected(selectedKey)}\n        >\n          <NavDropdown title='색상'>\n            {DISPLAYS.map((display) => (\n              <NavDropdown.Item key={display} eventKey={display}>{display}</NavDropdown.Item>\n            ))}\n          </NavDropdown>\n        </Nav>\n        <Button onClick={() => copyToClipboard()}>갈무리</Button>\n      </Navbar>\n      <div className='text-center mt-3'>\n        <canvas\n          ref={terminalRef}\n          width={CANVAS_WIDTH}\n          height={CANVAS_HEIGHT}\n          className='w-100'\n          style={{ maxWidth: '700px' }}\n          onClick={() => terminalClicked()}\n          onMouseMove={(event) => mouseMove(event.clientX, event.clientY)}\n        ></canvas>\n        <div\n          ref={smartMouseBoxRef}\n          className='smart-mouse-box'\n          onClick={() => smartMouseClicked()}\n        ></div>\n        <input\n          ref={commandRef}\n          type={commandType}\n          className='command'\n          value={command}\n          onChange={(event) => setCommand(event.target.value)}\n          onKeyUp={(event) => onKeyUp(event.key)}\n        />\n      </div>\n      <div className='text-center mt-3'>\n        <a href='mailto:gcjjyy@gmail.com'>© 2019 gcjjyy@gmail.com</a>\n      </div>\n      <Modal show={rzDiag} size='xs' backdrop='static' centered>\n        <Modal.Header>\n          {rzDiagText}\n        </Modal.Header>\n        <Modal.Body className='text-center m-4'>\n          {rzProgress}\n          <ProgressBar\n            animated\n            now={parseInt(rzReceived / rzTotal * 100)}\n            label={`${parseInt(rzReceived / rzTotal * 100)}%`}\n          />\n        </Modal.Body>\n        {rzFinished &&\n          <div className='text-center m-3'>\n            <a href={rzUrl} download>\n              <Button className='w-50 mr-3'>\n                다운로드\n              </Button>\n            </a>\n            <Button onClick={() => rzClose()}>\n              닫기\n            </Button>\n          </div>\n        }\n      </Modal>\n      <LoadingModal show={connDiag} message='접속 중입니다..'/>\n      <LoadingModal show={applyDiag} message='적용 중입니다..'/>\n    </div>\n  )\n}\n\nexport default App\n","const THEMES = {\n  VGA: [\n    '#000000', // Black\n    '#000080', // Blue\n    '#008000', // Green\n    '#008080', // Cyan\n    '#800000', // Red\n    '#800080', // Magenta\n    '#804000', // Brown\n    '#808080', // Light gray\n    '#404040', // Gray\n    '#4040ff', // Light blue\n    '#40ff40', // Light green\n    '#40ffff', // Light cyan\n    '#ff4040', // Light red\n    '#ff40ff', // Light magenta\n    '#ffff40', // Yellow\n    '#ffffff' // White\n  ],\n  ACI: [\n    '#363636',\n    '#0d1926',\n    '#83ff08',\n    '#ff8308',\n    '#0883ff',\n    '#8308ff',\n    '#08ff83',\n    '#b6b6b6',\n    '#424242',\n    '#ff1e8e',\n    '#8eff1e',\n    '#ff8e1e',\n    '#1e8eff',\n    '#8e1eff',\n    '#1eff8e',\n    '#e4f4ff'\n  ],\n  HERCULES: [\n    '#000000',\n    '#000000',\n    '#808080',\n    '#808080',\n    '#808080',\n    '#808080',\n    '#808080',\n    '#a0a0a0',\n    '#a0a0a0',\n    '#808080',\n    '#a0a0a0',\n    '#a0a0a0',\n    '#a0a0a0',\n    '#a0a0a0',\n    '#ffffff',\n    '#ffffff'\n  ]\n}\n\nexport default THEMES\n"],"sourceRoot":""}